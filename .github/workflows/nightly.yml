name: Nightly

on:
  push:
    branches:
    - main

  workflow_dispatch:

jobs:
  windows_release:
    name: Windows Nightly Release
    if: contains(toJson(github.event.commits), 'Update Nightlies')
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install SDKs
      uses: actions/checkout@v2
      with:
        repository: Chowdhury-DSP/Plugins_SDKs
        path: SDKs
        token: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Setup NuGet.exe
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: latest

    - name: Install Inno Setup
      run: nuget install innosetup

    - name: Setup Products directory
      run: mkdir products

    # - name: Setup debug session
    #   uses: mxschmitt/action-tmate@v3

    - name: Build ChowCentaur
      if: contains(toJson(github.event.commits), 'ChowCentaur')
      run: bash plugins/ChowCentaur/win_build.sh

    - name: Deploy Nightly Builds
      uses: garygrossgarten/github-action-scp@release
      with:
        local: products
        remote: ~/Library/Web/chowdsp/nightly_plugins
        host: ccrma-gate.stanford.edu
        username: jatin
        password: ${{ secrets.CCRMA_PASS }}

  macos_release:
    name: Mac Nightly Release
    if: contains(toJson(github.event.commits), 'Update Nightlies')
    runs-on: macos-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install SDKs
      uses: actions/checkout@v2
      with:
        repository: Chowdhury-DSP/Plugins_SDKs
        path: SDKs
        token: ${{ secrets.OUR_GITHUB_PAT }}

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Download Packages installer build tool
      run: wget http://s.sudre.free.fr/Software/files/Packages.dmg

    - name: Mount Packages image
      run: hdiutil attach Packages.dmg

    - name: Install Packages
      run: sudo installer -pkg /Volumes/Packages\ 1.2.9/Install\ Packages.pkg -target /

    - name: Install npm packages
      run: npm install -g notarize-cli

    - name: Setup temporary keychain and add installer signing certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        keychain-password: ${{ secrets.MAC_CERTIFICATES_PASS }}
        p12-file-base64: ${{ secrets.MAC_CERTIFICATES_BASE64 }}
        p12-password: ${{ secrets.MAC_CERTIFICATES_PASS }}

    - name: Setup temporary keychain and add installer signing certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        keychain-password: ${{ secrets.MAC_CERTIFICATES_PASS }}
        p12-file-base64: ${{ secrets.MAC_INSTALLER_CERTIFICATES_BASE64 }}
        p12-password: ${{ secrets.MAC_CERTIFICATES_PASS }}
        create-keychain: 'false'

    - name: Setup Products directory
      run: mkdir products

    # - name: Setup debug session
    #   uses: mxschmitt/action-tmate@v3

    - name: Build ChowCentaur
      if: contains(toJson(github.event.commits), 'ChowCentaur')
      run: bash plugins/ChowCentaur/mac_build.sh
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        INSTALLER_PASS: ${{ secrets.MAC_INSTALLER_PASS }}

    - name: Deploy Nightly Builds
      uses: garygrossgarten/github-action-scp@release
      with:
        local: products
        remote: ~/Library/Web/chowdsp/nightly_plugins
        host: ccrma-gate.stanford.edu
        username: jatin
        password: ${{ secrets.CCRMA_PASS }}
